==========caviar sdk==========
[零 可靠性设计]
*客户端连接超时
*客户端断连重连
*客户端重复登录保护
*消息缓存重发
*心跳检测
*资源优雅释放

[一 功能设计]
*caviar-client
    |-客户端登录
        |-可设置超时时间,抛Exception
        |-返回成功|失败(失败原因)
    |-客户端登出
        |-可设置超时时间,抛Exception
        |-返回成功|失败(失败原因)
    |-发送消息给对端(异步)
        |-可设置超时时间,抛Exception
    |-接收消息(通知回调)
    |-服务端心跳超时(通知回调)
    |-被动登出(通知回调)
        |-服务端检测客户端心跳超时

*caviar-server
    |-服务端启动
    |-服务端停止
    |消息处理
        |-客户端登录(通知回调)
        |-客户端登出(通知回调)
        |-客户端A发消息给B(通知回调)
    |-主动踢出客户端
    |-客户端断连/心跳超时(通知回调)
    |-向客户端推送消息(异步)

[二 通信协议]
*常见消息头关键字：
    1）Accept、Authorization、Host
    2）crcCode：版本号
    3）length：消息长度
    4）type：消息类型
    5）接口名、方法名...
    6）attachment：扩展字段
*消息协议
    Long        address         消息发送端IP转换为的Long
    Integer     crcCode         版本号
    Integer     msgType            消息类型
                                    |-请求消息
                                        |-客户端登录
                                        |-客户端登出
                                        |-客户端消息发送
                                        |-服务端消息推送
                                    |-应答消息
                                        |-客户端登录
                                        |-客户端登出
                                        |-客户端消息发送
                                        |-服务端消息推送
                                    |-心跳消息
                                        |-客户端Ping
                                        |-服务端Pong
    Integer     codeType        消息体序列化方式(0:json,1:xml)
    Integer     length          消息体长度

    byte[]      body            消息体
